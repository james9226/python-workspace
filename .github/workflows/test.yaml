name: CI
on:
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_call:
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable
  build-documentation:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install mkdocs
        run: pipx install mkdocs
      - name: Build docs
        run: mkdocs build --clean
    
  testing:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: |
          pipx install poetry 
          pipx install pytest
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: "poetry"

      - name: Install dependencies
        run: |
          poetry env use "3.10"
          poetry install --no-interaction

      - name: Test with pytest
        run: |
          pytest
  bump-version:
    runs-on: ubuntu-latest
    steps:

    - name: checkout repo
      uses: actions/checkout@v2.4.0

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        architecture: 'x64'
        
    - name: setup poetry
      run: |
        python -m pip install -U pip
        pip install poetry 
  
    - name: Setup Git
      run: |
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@teamname.com"

    - name: bump version
      run: |
        poetry version ${{ github.event.inputs.version }} #the action is not update the code
        git commit -m "bump up ${{ github.event.inputs.version }} version from workflow"
        git push

  # vulnerabilty-scan:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Run Snyk to check for vulnerabilities
  #       id: scan
  #       uses: snyk/actions/python@master
  #       continue-on-error: true # To make sure that SARIF upload gets called
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         args: --sarif-file-output=snyk.sarif
  #     - name: Upload result to GitHub Code Scanning
  #       uses: github/codeql-action/upload-sarif@v2
  #       with:
  #         sarif_file: snyk.sarif
  #     - name: Check on failures
  #       if: steps.scan.outcome != 'success'
  #       run: exit 1

