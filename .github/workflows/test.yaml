name: CI
on:
  pull_request:
    types: [opened, reopened, synchronize]
  workflow_call:
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable
  build-documentation:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install mkdocs
        run: pipx install mkdocs
      - name: Build docs
        run: mkdocs build --clean
    
  testing:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: |
          pipx install poetry 
          pipx install pytest
      - name: Setup Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: "poetry"

      - name: Install dependencies
        run: |
          poetry env use "3.10"
          poetry install --no-interaction

      - name: Test with pytest
        run: |
          pytest

    signoffs:
      runs-on: ubuntu-latest
      permissions:
        pull-requests: write
      steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            model-changed:
              - 'python_workspace/**'
            signoff-added:
              - 'docs/signoffs/**'
            model-source-code-changed:
              - 'python_workspace/**.py'
            assumptions-updated:
              - 'python_workspace/inputs/**'
      - name: check-signoff
        if: steps.filter.outputs.signoff-added == 'false' &&	steps.filter.outputs.model-changed == 'true' 
        run: exit 1
      - name: comment-on-model-change
        uses: actions/github-script@v3
        if: steps.filter.outputs.model-code-changed == 'true'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Model source code has been modified - have you had review & approval from Model Risk?'
            })


  # vulnerabilty-scan:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Run Snyk to check for vulnerabilities
  #       id: scan
  #       uses: snyk/actions/python@master
  #       continue-on-error: true # To make sure that SARIF upload gets called
  #       env:
  #         SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
  #       with:
  #         args: --sarif-file-output=snyk.sarif
  #     - name: Upload result to GitHub Code Scanning
  #       uses: github/codeql-action/upload-sarif@v2
  #       with:
  #         sarif_file: snyk.sarif
  #     - name: Check on failures
  #       if: steps.scan.outcome != 'success'
  #       run: exit 1

